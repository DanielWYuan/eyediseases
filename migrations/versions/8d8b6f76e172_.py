"""empty message

Revision ID: 8d8b6f76e172
Revises:
Create Date: 2020-06-22 10:49:52.761340

"""
#  Copyright (c) 2018-2021 Beijing Ekitech Co., Ltd.
#  All rights reserved.

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8d8b6f76e172'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('causality',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('variant', sa.String(length=16), nullable=True),
    sa.Column('p_value', sa.Float(), nullable=True),
    sa.Column('beta', sa.Float(), nullable=True),
    sa.Column('disease', sa.String(length=255), nullable=True),
    sa.Column('color', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_causality_variant'), 'causality', ['variant'], unique=False)
    op.create_table('disease_go',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('disease', sa.String(length=255), nullable=True),
    sa.Column('dataset', sa.String(length=8), nullable=True),
    sa.Column('category', sa.String(length=128), nullable=True),
    sa.Column('term', sa.Text(), nullable=True),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('percent', sa.Float(), nullable=True),
    sa.Column('p_value', sa.Float(), nullable=True),
    sa.Column('genes', sa.Text(), nullable=True),
    sa.Column('list_total', sa.Integer(), nullable=True),
    sa.Column('pop_hits', sa.Integer(), nullable=True),
    sa.Column('pop_total', sa.Integer(), nullable=True),
    sa.Column('fold_enrichment', sa.Float(), nullable=True),
    sa.Column('bonferroni', sa.Float(), nullable=True),
    sa.Column('benjamini', sa.Float(), nullable=True),
    sa.Column('fdr', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('epigenomics',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('file_url', sa.String(length=256), nullable=False),
    sa.Column('disease', sa.String(length=128), nullable=False),
    sa.Column('data_type', sa.String(length=16), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('expression_microarray_disease',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('gene', sa.String(length=128), nullable=True),
    sa.Column('ensembl_id', sa.String(length=128), nullable=True),
    sa.Column('retinal_detachment', sa.Float(), nullable=True),
    sa.Column('diabetic_retinopathy', sa.Float(), nullable=True),
    sa.Column('retinoblastoma', sa.Float(), nullable=True),
    sa.Column('retinitis_pigmentosa', sa.Float(), nullable=True),
    sa.Column('keratoconus', sa.Float(), nullable=True),
    sa.Column('keratitis', sa.Float(), nullable=True),
    sa.Column('trachoma', sa.Float(), nullable=True),
    sa.Column('glaucoma', sa.Float(), nullable=True),
    sa.Column('fuchs_endothelial_corneal_dystrophy', sa.Float(), nullable=True),
    sa.Column('uveal_melanoma', sa.Float(), nullable=True),
    sa.Column('uveal_melanoma_mum2b', sa.Float(), nullable=True),
    sa.Column('uveal_melanoma_ocm1a', sa.Float(), nullable=True),
    sa.Column('graves_ophthalmopathy', sa.Float(), nullable=True),
    sa.Column('nonspecific_orbital_inflammation', sa.Float(), nullable=True),
    sa.Column('sarcoidosis', sa.Float(), nullable=True),
    sa.Column('granulomatosis_with_polyangiitis', sa.Float(), nullable=True),
    sa.Column('thyroid_eye_disease', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_expression_microarray_disease_gene'), 'expression_microarray_disease', ['gene'], unique=False)
    op.create_table('expression_microarray_tissue',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('gene', sa.String(length=128), nullable=True),
    sa.Column('ensembl_id', sa.String(length=128), nullable=True),
    sa.Column('retina', sa.Float(), nullable=True),
    sa.Column('corneal', sa.Float(), nullable=True),
    sa.Column('corneal_epithelium', sa.Float(), nullable=True),
    sa.Column('corneal_endothelium', sa.Float(), nullable=True),
    sa.Column('conjunctiva', sa.Float(), nullable=True),
    sa.Column('optic_nerve_head', sa.Float(), nullable=True),
    sa.Column('lymphoblast', sa.Float(), nullable=True),
    sa.Column('eye_orbit', sa.Float(), nullable=True),
    sa.Column('lacrimal_gland', sa.Float(), nullable=True),
    sa.Column('thyroid', sa.Float(), nullable=True),
    sa.Column('normal_uveal_melanocytes', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_expression_microarray_tissue_gene'), 'expression_microarray_tissue', ['gene'], unique=False)
    op.create_table('expression_mouse',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('gene', sa.String(length=128), nullable=True),
    sa.Column('homologous_gene', sa.String(length=32), nullable=True),
    sa.Column('lens1', sa.Float(), nullable=True),
    sa.Column('lens2', sa.Float(), nullable=True),
    sa.Column('lens3', sa.Float(), nullable=True),
    sa.Column('lens4', sa.Float(), nullable=True),
    sa.Column('lens5', sa.Float(), nullable=True),
    sa.Column('lens6', sa.Float(), nullable=True),
    sa.Column('lens7', sa.Float(), nullable=True),
    sa.Column('lens8', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_expression_mouse_gene'), 'expression_mouse', ['gene'], unique=False)
    op.create_table('expression_rna_seq_disease',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('gene', sa.String(length=128), nullable=True),
    sa.Column('ensembl_id', sa.String(length=128), nullable=True),
    sa.Column('age_related_macular_degeneration', sa.Float(), nullable=True),
    sa.Column('diabetic_retinopathy', sa.Float(), nullable=True),
    sa.Column('keratoconus', sa.Float(), nullable=True),
    sa.Column('primary_open_angle_glaucoma', sa.Float(), nullable=True),
    sa.Column('retinitis_pigmentosa', sa.Float(), nullable=True),
    sa.Column('retinoblastoma', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_expression_rna_seq_disease_gene'), 'expression_rna_seq_disease', ['gene'], unique=False)
    op.create_table('expression_rna_seq_tissue',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('gene', sa.String(length=128), nullable=True),
    sa.Column('ensembl_id', sa.String(length=128), nullable=True),
    sa.Column('corneas', sa.Float(), nullable=True),
    sa.Column('corneal_endothelial_cells', sa.Float(), nullable=True),
    sa.Column('retina', sa.Float(), nullable=True),
    sa.Column('retina_macula', sa.Float(), nullable=True),
    sa.Column('retina_non_macula', sa.Float(), nullable=True),
    sa.Column('rpe_macula', sa.Float(), nullable=True),
    sa.Column('rpe_non_macula', sa.Float(), nullable=True),
    sa.Column('retinal_endothelial_cells', sa.Float(), nullable=True),
    sa.Column('ipsc_derived_retinal_organoids', sa.Float(), nullable=True),
    sa.Column('trabecular_meshwork_cells', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_expression_rna_seq_tissue_gene'), 'expression_rna_seq_tissue', ['gene'], unique=False)
    op.create_table('gene',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('symbol', sa.String(length=32), nullable=True),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('synonyms', sa.String(length=255), nullable=True),
    sa.Column('gene_type', sa.String(length=128), nullable=True),
    sa.Column('location', sa.Text(), nullable=True),
    sa.Column('strand', sa.String(length=32), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('omim', sa.String(length=16), nullable=True),
    sa.Column('ensembl', sa.String(length=32), nullable=True),
    sa.Column('clinvar', sa.String(length=128), nullable=True),
    sa.Column('decipher', sa.String(length=128), nullable=True),
    sa.Column('gnomad', sa.String(length=128), nullable=True),
    sa.Column('panelapp', sa.String(length=128), nullable=True),
    sa.Column('eye_disease', sa.Text(), nullable=True),
    sa.Column('phenotypes', sa.Text(), nullable=True),
    sa.Column('drugbank_id', sa.Text(), nullable=True),
    sa.Column('drug_target', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gene_disease_significance',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('gene', sa.String(length=32), nullable=True),
    sa.Column('amd', sa.Float(), nullable=True),
    sa.Column('dr', sa.Float(), nullable=True),
    sa.Column('kc', sa.Float(), nullable=True),
    sa.Column('glc', sa.Float(), nullable=True),
    sa.Column('rp', sa.Float(), nullable=True),
    sa.Column('rb', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gene_expression',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('gene_id', sa.String(length=32), nullable=True),
    sa.Column('disease', sa.String(length=255), nullable=True),
    sa.Column('gene', sa.String(length=32), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('color', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gene_expression_gene'), 'gene_expression', ['gene'], unique=False)
    op.create_table('gene_network_disease',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('gene', sa.String(length=32), nullable=True),
    sa.Column('disease', sa.String(length=255), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('dataset', sa.String(length=8), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gene_network_gene',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('gene', sa.String(length=32), nullable=True),
    sa.Column('contrast_gene', sa.String(length=32), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('genetic_gwas',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('gene_id', sa.String(length=16), nullable=True),
    sa.Column('chromosome', sa.String(length=2), nullable=True),
    sa.Column('scope', sa.String(length=16), nullable=True),
    sa.Column('gene', sa.String(length=32), nullable=True),
    sa.Column('variant', sa.String(length=255), nullable=True),
    sa.Column('major_allele', sa.String(length=32), nullable=True),
    sa.Column('minor_allele', sa.String(length=128), nullable=True),
    sa.Column('band', sa.String(length=32), nullable=True),
    sa.Column('ensembl', sa.String(length=255), nullable=True),
    sa.Column('p_value', sa.Float(), nullable=True),
    sa.Column('beta', sa.Float(), nullable=True),
    sa.Column('context', sa.String(length=128), nullable=True),
    sa.Column('cadd', sa.String(length=32), nullable=True),
    sa.Column('polyphen', sa.String(length=32), nullable=True),
    sa.Column('sift', sa.String(length=32), nullable=True),
    sa.Column('phylop', sa.String(length=32), nullable=True),
    sa.Column('study', sa.Text(), nullable=True),
    sa.Column('initial_sample_size', sa.Text(), nullable=True),
    sa.Column('peplication_sample_size', sa.Text(), nullable=True),
    sa.Column('disease', sa.String(length=255), nullable=True),
    sa.Column('pubmed', sa.String(length=255), nullable=True),
    sa.Column('drug', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_genetic_gwas_disease'), 'genetic_gwas', ['disease'], unique=False)
    op.create_table('genetic_omim',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('gene_id', sa.String(length=32), nullable=True),
    sa.Column('gene', sa.String(length=32), nullable=True),
    sa.Column('gene_name', sa.String(length=128), nullable=True),
    sa.Column('variant', sa.String(length=255), nullable=True),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('band', sa.String(length=32), nullable=True),
    sa.Column('omim', sa.String(length=16), nullable=True),
    sa.Column('ensembl', sa.String(length=128), nullable=True),
    sa.Column('synonyms', sa.String(length=128), nullable=True),
    sa.Column('location', sa.Text(), nullable=True),
    sa.Column('clinvar', sa.Text(), nullable=True),
    sa.Column('decipher', sa.Text(), nullable=True),
    sa.Column('gnomad', sa.Text(), nullable=True),
    sa.Column('disease', sa.String(length=255), nullable=True),
    sa.Column('disease_omim', sa.String(length=16), nullable=True),
    sa.Column('confidence', sa.String(length=32), nullable=True),
    sa.Column('publications', sa.Text(), nullable=True),
    sa.Column('phenotypes_in_omim', sa.Text(), nullable=True),
    sa.Column('phenotypes_in_hpo', sa.String(length=128), nullable=True),
    sa.Column('drug', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_genetic_omim_disease'), 'genetic_omim', ['disease'], unique=False)
    op.create_table('gnomad',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('chromosome', sa.String(length=2), nullable=True),
    sa.Column('scope', sa.String(length=16), nullable=True),
    sa.Column('variant', sa.String(length=16), nullable=True),
    sa.Column('territory', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gnomad_variant'), 'gnomad', ['variant'], unique=False)
    op.create_table('markers_cell',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('gene', sa.String(length=128), nullable=True),
    sa.Column('cluster', sa.Integer(), nullable=True),
    sa.Column('labels', sa.String(length=128), nullable=True),
    sa.Column('p_val', sa.Float(), nullable=True),
    sa.Column('avg', sa.Float(), nullable=True),
    sa.Column('p_val_adj', sa.Float(), nullable=True),
    sa.Column('pct1', sa.Float(), nullable=True),
    sa.Column('pct2', sa.Float(), nullable=True),
    sa.Column('cell_type', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('out_cell',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('xaxis', sa.Float(), nullable=True),
    sa.Column('yaxis', sa.Float(), nullable=True),
    sa.Column('cluster', sa.String(length=4), nullable=True),
    sa.Column('labels', sa.String(length=64), nullable=True),
    sa.Column('cell_type', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('summary',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('snpid', sa.String(length=32), nullable=True),
    sa.Column('position_hg38', sa.String(length=32), nullable=True),
    sa.Column('major_allele', sa.String(length=128), nullable=True),
    sa.Column('variant', sa.String(length=128), nullable=True),
    sa.Column('protein', sa.String(length=64), nullable=True),
    sa.Column('polyphen', sa.String(length=32), nullable=True),
    sa.Column('cadd', sa.String(length=32), nullable=True),
    sa.Column('sift', sa.String(length=32), nullable=True),
    sa.Column('gerp', sa.String(length=32), nullable=True),
    sa.Column('gene', sa.String(length=128), nullable=True),
    sa.Column('ensembl', sa.Text(), nullable=True),
    sa.Column('dbsnp', sa.Text(), nullable=True),
    sa.Column('gnomad', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tissue_gene_significance',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('gene_symbol', sa.String(length=128), nullable=True),
    sa.Column('corneas', sa.Float(), nullable=True),
    sa.Column('corneal_endothelial_cells', sa.Float(), nullable=True),
    sa.Column('retina', sa.Float(), nullable=True),
    sa.Column('retina_macula', sa.Float(), nullable=True),
    sa.Column('retina_non_macula', sa.Float(), nullable=True),
    sa.Column('rpe_macula', sa.Float(), nullable=True),
    sa.Column('rpe_non_macula', sa.Float(), nullable=True),
    sa.Column('retinal_endothelial_cells', sa.Float(), nullable=True),
    sa.Column('ipsc_derived_retinal_organoids', sa.Float(), nullable=True),
    sa.Column('trabecular_meshwork_cells', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tissue_network_gene',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('gene', sa.String(length=32), nullable=True),
    sa.Column('contrast_gene', sa.String(length=32), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('alt_id', postgresql.UUID(), nullable=False),
    sa.Column('cid', sa.String(length=128), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('admin', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('alt_id'),
    sa.UniqueConstraint('cid')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user')
    op.drop_table('tissue_network_gene')
    op.drop_table('tissue_gene_significance')
    op.drop_table('summary')
    op.drop_table('out_cell')
    op.drop_table('markers_cell')
    op.drop_index(op.f('ix_gnomad_variant'), table_name='gnomad')
    op.drop_table('gnomad')
    op.drop_index(op.f('ix_genetic_omim_disease'), table_name='genetic_omim')
    op.drop_table('genetic_omim')
    op.drop_index(op.f('ix_genetic_gwas_disease'), table_name='genetic_gwas')
    op.drop_table('genetic_gwas')
    op.drop_table('gene_network_gene')
    op.drop_table('gene_network_disease')
    op.drop_index(op.f('ix_gene_expression_gene'), table_name='gene_expression')
    op.drop_table('gene_expression')
    op.drop_table('gene_disease_significance')
    op.drop_table('gene')
    op.drop_index(op.f('ix_expression_rna_seq_tissue_gene'), table_name='expression_rna_seq_tissue')
    op.drop_table('expression_rna_seq_tissue')
    op.drop_index(op.f('ix_expression_rna_seq_disease_gene'), table_name='expression_rna_seq_disease')
    op.drop_table('expression_rna_seq_disease')
    op.drop_index(op.f('ix_expression_mouse_gene'), table_name='expression_mouse')
    op.drop_table('expression_mouse')
    op.drop_index(op.f('ix_expression_microarray_tissue_gene'), table_name='expression_microarray_tissue')
    op.drop_table('expression_microarray_tissue')
    op.drop_index(op.f('ix_expression_microarray_disease_gene'), table_name='expression_microarray_disease')
    op.drop_table('expression_microarray_disease')
    op.drop_table('epigenomics')
    op.drop_table('disease_go')
    op.drop_index(op.f('ix_causality_variant'), table_name='causality')
    op.drop_table('causality')
    # ### end Alembic commands ###
